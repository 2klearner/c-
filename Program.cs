using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data.SqlClient;
using System.Configuration;
using System.IO;
using System.Data;
using System.Data.OleDb;
using ClosedXML.Excel;
using System.Globalization;
using System.Net.Mail;


namespace Form60_Mail
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                EventLog("Started");

                OpenXmlCreateExcel();
                EventLog("Sucesss");
            }
            catch (Exception ex)
            {
                EventLog("ErrorOccured" + ex.ToString());
            }
            EventLog("Ended");
        }
        public static void OpenXmlCreateExcel()
        {
            string APPFolderPath = ConfigurationSettings.AppSettings["FolderPath"];
            string filename = ConfigurationSettings.AppSettings["Filename"];
            string datepart = DateTime.Now.ToString("ddMMyyyy", CultureInfo.InvariantCulture);
            string finalFileNAME = filename+".xlsx";

            string sheetName = ConfigurationSettings.AppSettings["SheetName"];
            string HTMLHi = ConfigurationSettings.AppSettings["HTMLHi"];
            string HTMLBody = ConfigurationSettings.AppSettings["HTMLBody"];
            string HTMLThanks = ConfigurationSettings.AppSettings["HTMLThanks"];
            string MailSubject = ConfigurationSettings.AppSettings["MailSubject"];
            
            DataSet ds = new DataSet();
            ds = LoadDataFromDbToExcel();

            
            if (ds.Tables.Count > 0)
            {
                EventLog("Datafound");
                //CreateExcel();

                //Exporting to Excel
                string folderPath = APPFolderPath;
                if (!Directory.Exists(folderPath))
                {
                    Directory.CreateDirectory(folderPath);
                }
                using (XLWorkbook wb = new XLWorkbook())
                {

                   
                    for (int i = 0; i < ds.Tables.Count; i++)
                    {

                        DataTable dt = new DataTable();
                        dt = ds.Tables[i];
                        sheetName = dynamicSheetname(i);
                        wb.Worksheets.Add(dt, sheetName);
                    }
                    // wb.Worksheets.Add(dt2, "Employee");
                    wb.SaveAs(folderPath + finalFileNAME);
                }

                string html = HTMLHi+",<br>";
                html = html + HTMLBody + "<br>";
               
                html = html + "<br>";
                html = html + "<br>AutoGenerated Mail:" + System.Guid.NewGuid().ToString() + "<br>";
                html = html + "Thanks &Regards<br>" + HTMLThanks;
                string wholepath=folderPath + finalFileNAME;
                EventLog("wholepath" + wholepath);
                func_SendEmail(MailSubject, html, wholepath);
            }
            else
            {
                EventLog("No data found Datafound " + DateTime.Now.ToString());
            }

        }

        public static string dynamicSheetname(int count)
        {
           
            

            string sheetname = "";
            try
            {
                String str_sheetname = ConfigurationSettings.AppSettings["SheetName"];
                String[] array_sheetname = str_sheetname.Trim().Split(';');

                if (array_sheetname[count].Trim() != "" )
                {

                    sheetname = "" + array_sheetname[count];
                }
                else
                {
                    sheetname = "" + (count + 1);

                }
            }
            catch
            {
                sheetname = "" + (count + 1);

            }
            return sheetname;
        }
        public static DataSet LoadDataFromDbToExcel()
        {
            string SPNAME = ConfigurationSettings.AppSettings["SPNAME"];
            SqlCommand cmd = new SqlCommand();
            string strMsg = string.Empty;
            string vcrErrorCode = string.Empty;
            DataSet dt = new DataSet();

            try
            {
                cmd.Connection = getConnection();
                cmd.CommandTimeout = 99999;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = SPNAME;
                //cmd.Parameters.AddWithValue("@UPDATE_AUTHENTICATION_STATUS", 0);
                //cmd.Parameters.Add("@vcrErrorCode", SqlDbType.VarChar, 30).Value = vcrErrorCode;
                //cmd.Parameters["@vcrErrorCode"].Direction = ParameterDirection.Output;
                //cmd.Parameters.Add("@KeyType", System.Data.SqlDbType.VarChar, 50).Value = obj.KeyType;


                SqlDataAdapter sqlAdapter = new SqlDataAdapter(cmd);
                sqlAdapter.Fill(dt);




            }
            catch (Exception Ex)
            {
                EventLog(Ex.ToString());
            }
            return dt;

        }
        public static void EventLog(string LogMgs)
        {
            try
            {
                StringBuilder sbLog = new StringBuilder();
                string LogPath = "";
                LogPath = ConfigurationManager.AppSettings["LogPath"];
                sbLog.Append(LogMgs + DateTime.Now.ToString() + Environment.NewLine);
                File.AppendAllText(LogPath + "\\" + "log_" + DateTime.Now.ToString("dd-MM-yyyy") + ".txt", sbLog.ToString());
                sbLog.Clear();


            }
            catch (Exception ex)
            {

                Console.WriteLine("Something went wrong while logging!");
                Console.ReadKey();
            }

            finally
            {

            }


        }
        public static SqlConnection getConnection()
        {
            SqlConnection sqlconn = new SqlConnection();
            try
            {
                string connectionstring = "";
                connectionstring = ConfigurationSettings.AppSettings["ConnectionStringSql"];
                sqlconn = new SqlConnection(connectionstring);
                sqlconn.Open();

            }
            catch (Exception Ex)
            {
                EventLog(Ex.ToString());
            }
            return sqlconn;
        }
        public static void func_SendEmail(String str_Subject, String str_Body, String str_Attachments)
        {
            try
            {
                String str_SMTP_Username = ConfigurationSettings.AppSettings["str_SMTP_Username"];
                String str_SMTP_Password = ConfigurationSettings.AppSettings["str_SMTP_Password"];
                String str_SMTP_Host = ConfigurationSettings.AppSettings["str_SMTP_Host"];
                String str_SMTP_Port = ConfigurationSettings.AppSettings["str_SMTP_Port"];
                String str_SMTP_SentTo = ConfigurationSettings.AppSettings["str_SMTP_SentTo"];
                string str_From_EmailID = ConfigurationSettings.AppSettings["str_From_EmailID"];

                string str_SMTP_CC = ConfigurationSettings.AppSettings["str_SMTP_CC"];
                //str_SMTP_Username = "bhartiaxapepi";
                //str_SMTP_SentTo = "itservicedesk@bhartiaxa.com;amar.khanra@in.ibm.com;adhainje@in.ibm.com";
                //// str_SMTP_SentTo = "kunal.waghela.ext@bhartiaxa.com";
                ////str_SMTP_Host = "SMTP.pepipost.com";
                //str_SMTP_Host = "10.145.75.147";
                //str_SMTP_Password = "Bh@rt!@123";
                //str_SMTP_Port = "25";

                //string str_From_EmailID = "service@bhartiaxa.com";

                EventLog("str_SMTP_Username " + str_SMTP_Username);
                EventLog("str_SMTP_Password " + str_SMTP_Password);
                EventLog("str_SMTP_Host " + str_SMTP_Host);
                EventLog("str_SMTP_Port " + str_SMTP_Port);
                EventLog("str_From_EmailID " + str_From_EmailID);
                EventLog("str_SMTP_SentTo " + str_SMTP_SentTo);
                EventLog("str_SMTP_CC " + str_SMTP_CC);
                EventLog("all detail ");
                MailMessage mail = new MailMessage();
                mail.IsBodyHtml = true;
                mail.From = new MailAddress(str_From_EmailID);

                String[] array_To_Email = str_SMTP_SentTo.Trim().Split(';');
                foreach (String str_ToEmail in array_To_Email)
                {
                    if (str_ToEmail.Length != 0)
                    {
                        mail.To.Add(str_ToEmail);
                    }
                }


                String[] array_To_CC = str_SMTP_CC.Trim().Split(';');
                foreach (String str_ToEmail in array_To_CC)
                {
                    if (str_ToEmail.Length != 0)
                    {
                        mail.CC.Add(str_ToEmail);
                    }
                } 


                EventLog("MailAddress");

                mail.Subject = str_Subject;
                mail.Body = str_Body;

                String[] array_Attachments = str_Attachments.Trim().Split(';');
                foreach (String str_Attachment in array_Attachments)
                {
                    if (File.Exists(str_Attachment))
                    {
                        Attachment attachment = new Attachment(str_Attachment);
                        mail.Attachments.Add(attachment);
                    }
                }
                EventLog("Attachment");
                SmtpClient SmtpServer = new SmtpClient(str_SMTP_Host);
                SmtpServer.Port = Convert.ToInt32(str_SMTP_Port);
                SmtpServer.Credentials = new System.Net.NetworkCredential(str_SMTP_Username, str_SMTP_Password);
                SmtpServer.EnableSsl = false;
                SmtpServer.Send(mail);
                EventLog("SmtpClient");
            }
            catch (Exception ex)
            {
                EventLog("email error"+ex.ToString());
            }
        }

      
    
    }
}
